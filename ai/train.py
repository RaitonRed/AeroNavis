import numpy as np
from keras.callbacks import ModelCheckpoint
from tensorflow.keras.callbacks import EarlyStopping
from keras.models import load_model
from utils.data_loader import load_processed_features_and_labels
from ai.model import build_navigation_model
import os
import sys

sys.path.append(os.path.abspath('.'))

# Ù…Ø³ÛŒØ± Ø¯ÛŒØªØ§Ø³Øª
DATA_PATH = "./data/processed_data.csv"
# Ù…Ø³ÛŒØ± Ø°Ø®ÛŒØ±Ù‡ Ù…Ø¯Ù„
MODEL_SAVE_PATH = "./models/model"

# 1. Ø¨Ø§Ø±Ú¯Ø°Ø§Ø±ÛŒ Ø¯Ø§Ø¯Ù‡â€ŒÙ‡Ø§
X, y = load_processed_features_and_labels(DATA_PATH)
if X is None or y is None:
    print("[âœ—] Failed to load data. Exiting...")
    exit()

# 2. Ø³Ø§Ø®Øª Ù…Ø¯Ù„
model = build_navigation_model()

# 3. Ø¢Ù…Ø§Ø¯Ù‡â€ŒØ³Ø§Ø²ÛŒ Ø¨Ø±Ø§ÛŒ Ø°Ø®ÛŒØ±Ù‡ Ø¨Ù‡ØªØ±ÛŒÙ† Ù…Ø¯Ù„ Ø­ÛŒÙ† Ø¢Ù…ÙˆØ²Ø´
os.makedirs(os.path.dirname(MODEL_SAVE_PATH), exist_ok=True)
checkpoint = ModelCheckpoint(MODEL_SAVE_PATH, monitor='loss', save_best_only=True, verbose=1)

# 4. Ø¢Ù…ÙˆØ²Ø´ Ù…Ø¯Ù„
print("[ðŸš€] Training started...")
early_stop = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)
model.fit(
    X_train, 
    y_train, 
    validation_data=(X_val, y_val), 
    epochs=50, 
    callbacks=[early_stop, checkpoint_cb]
)

print("[âœ“] Training complete.")
